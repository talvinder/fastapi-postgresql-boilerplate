name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ACCOUNT_ID: 277707114893
  APP_NAME: backend 
  CLUSTER_NAME: motherhood-prod
  ECR_REGISTRY: zop-dev
  NAMESPACE: fpbp-fastapi-boilerplate   
  REGION: ap-south-1

jobs:
  dockerize:
    runs-on: ubuntu-latest
    name: 🐳 Dockerize
  
    outputs:
      image: ${{ steps.build-push.outputs.image }}

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Build
        run: yarn build
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{ env.REGION }}

      - name: Login to Amazon ECR Private
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image to ECR
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.REGION }}.amazonaws.com/${{ env.ECR_REGISTRY }}:${{ env.APP_NAME }}-${{ github.sha }}

      - id: output-image
        run: 
          echo "image=`echo ${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.REGION }}.amazonaws.com/${{ env.ECR_REGISTRY }}:${{ env.APP_NAME }}-${{ github.sha }}`" >> "$GITHUB_OUTPUT"    


  deployment:
    runs-on: ubuntu-latest
    needs: dockerize
    name: 🚀 Deploy
    
    env:
      image: ${{ needs.dockerize.outputs.image }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ${{ env.REGION }}

      - name: Setup Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version:  'latest'

      - name: Update AWS Kubectl component
        run: aws eks update-kubeconfig --region ${{ env.REGION }} --name ${{ env.CLUSTER_NAME }}

      - name: Update Deployment Image
        run: 
          kubectl set image deployment/${{ env.APP_NAME }} ${{ env.APP_NAME }}="${{ env.ACCOUNT_ID }}.dkr.ecr.${{ env.REGION }}.amazonaws.com/${{ env.ECR_REGISTRY }}:${{ env.APP_NAME }}-${{ github.sha }}" --namespace ${{ env.NAMESPACE }} 
      